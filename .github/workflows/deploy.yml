name: Platiagro deploy

on:
  issues:
    types: [opened]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Install VPNC
        run: |
          sudo apt-get install vpnc
      - name: Create VPN Configuration File
        run: |
          sudo bash -c 'cat <<EOF > /etc/vpnc/vpnc.conf
          IPSec gateway ${{ secrets.VPN_GATEWAY }}
          IPSec ID ${{ secrets.VPN_IPSEC_ID }}
          IPSec secret ${{ secrets.VPN_IPSEC_SECRET }}
          Xauth username ${{ secrets.VPN_USERNAME }}
          Xauth password ${{ secrets.VPN_PASSWORD }}
          EOF'
      - name: Connect to VPN
        run: |
          curl --request POST  \
          --url https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "body": "Accessing intranet... (~35 minutes remaining)"
            }'
          sudo vpnc vpnc
      - name: Create VM Name
        id: vars
        run: |
          VM_NAME=$(printf 'github-%(%Y-%m-%d-%H:%M:%S)T\n' -1)
          echo ::set-output name=VM_NAME::${VM_NAME}
      - name: Create Platiagro VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          timeout: 3m
          command_timeout: 30m
          script: |
            VM_NAME=${{ steps.vars.outputs.VM_NAME }}
            curl --request POST  \
            --url https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --header 'content-type: application/json' \
            --data '{
              "body": "Cloning VM... (~33 minutes remaining) \n\n New VM: '"$VM_NAME"' " 
              }'
            sudo virt-clone --original=platia-automation --name=${VM_NAME} --file=/var/lib/libvirt/images/${VM_NAME}.qcow2
      - name: Start Platiagro VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          timeout: 3m
          script: |
            curl --request POST  \
            --url https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --header 'content-type: application/json' \
            --data '{
              "body": "Starting VM... (~13 minutes remaining)" 
              }'
            VM_NAME=${{ steps.vars.outputs.VM_NAME }}
            virsh start ${VM_NAME}
            sleep 120
      - name: Deploy Platiagro VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          timeout: 3m
          command_timeout: 15m
          script: |
            VM_NAME=${{ steps.vars.outputs.VM_NAME }}
            curl --request POST  \
            --url https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --header 'content-type: application/json' \
            --data '{
              "body": "Deploying PlatIAgro... (~10 minutes remaining)" 
              }'
            sleep 600
            VM_IP=$(sudo virt-cat -d ${VM_NAME} /home/cpqd/ifconfig.info | grep 'inet' | cut -d: -f2 | awk '{print $2}')
            curl --request POST  \
            --url https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --header 'content-type: application/json' \
            --data '{
              "body": "Done! \n\n Use this URL to access PlatIAgro: _http://'"$VM_IP"'_"
              }'
            curl --request PATCH  \
            --url https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }} \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --header 'content-type: application/json' \
            --data '{
              "state": "closed"
              }'
      - name: Disconnect to VPN
        run: |
          sudo vpnc-disconnect
