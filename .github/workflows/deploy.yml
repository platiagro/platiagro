name: Platiagro deploy

on:
  push:
    branches: [feature/deploy-on-cpqd]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Install VPNC
        run: |
          sudo apt-get install vpnc
      - name: Create VPN Configuration File
        run: |
          sudo bash -c 'cat <<EOF > /etc/vpnc/vpnc.conf
          IPSec gateway ${{ secrets.VPN_GATEWAY }}
          IPSec ID ${{ secrets.VPN_IPSEC_ID }}
          IPSec secret ${{ secrets.VPN_IPSEC_SECRET }}
          Xauth username ${{ secrets.VPN_USERNAME }}
          Xauth password ${{ secrets.VPN_PASSWORD }}
          EOF'
      - name: Connect to VPN
        run: |
          sudo vpnc vpnc
      - name: Create VM Name
        id: vars
        run: |
          VM_NAME=$(printf 'github-%(%Y-%m-%d-%H:%M:%S)T\n' -1)
          echo ::set-output name=VM_NAME::${VM_NAME}
      - name: Create Platiagro VM
        uses: appleboy/ssh-action@master
        with:
          host: 10.50.11.163
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          command_timeout: 50m
          script: |
            VM_NAME=${{ steps.vars.outputs.VM_NAME }}
            echo ${VM_NAME}
            sudo virt-clone --original=platia-automation --name=${VM_NAME} --file=/var/lib/libvirt/images/${VM_NAME}.qcow2
      - name: Start Platiagro VM
        uses: appleboy/ssh-action@master
        with:
          host: 10.50.11.163
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            VM_NAME=${{ steps.vars.outputs.VM_NAME }}
            echo ${VM_NAME}
            virsh start ${VM_NAME}
            sleep 120
            virsh destroy ${VM_NAME}
            sleep 60
            virsh start ${VM_NAME}
            sleep 120
            sudo virt-cat -d ${VM_NAME} /home/cpqd/ifconfig.info
            VM_IP=$(sudo virt-cat -d ${VM_NAME} /home/cpqd/ifconfig.info | grep 'inet' | cut -d: -f2 | awk '{print $2}')
            echo ${VM_IP}
      - name: Disconnect to VPN
        run: |
          sudo vpnc-disconnect
